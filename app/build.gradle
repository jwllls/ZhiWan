apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    def DEF_APP_ANME = "智玩"
    def DEF_APPLICATION_ID = "com.hamitao.zhiwan"
    def DEF_VERSION_ANME = "1.0.0"
    def DEF_VERSION_CODE = 20
    def DEF_APP_ICON = "@drawable/app_logo"


    defaultConfig {

        applicationId project.hasProperty("cusAppId") ? cusAppId : DEF_APPLICATION_ID
        resValue "string", "app_name", project.hasProperty("cusAppName") ? cusAppName : DEF_APP_ANME
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode project.hasProperty("cusVersionCode") ? Integer.parseInt(cusVersionCode) : DEF_VERSION_CODE
        versionName project.hasProperty("cusVersionName") ? cusVersionName : DEF_VERSION_ANME

        ndk {
            //使用这个需要在gradle.properties添加android.useDeprecatedNdk = true
            abiFilters 'armeabi', 'armeabi-v7a'//过滤掉除armeabi文件夹以外的arm
        }

        multiDexEnabled true//解决编译时出现"finished with non-zero exit value 2"的报错,通常是因为jar包重复导致的

        /*    manifestPlaceholders = [
                    XG_ACCESS_ID : "2100275299",
                    XG_ACCESS_KEY: "AJI226WC26AW",
            ]*/

        //内存泄漏配置
        configurations.all { config ->
            if (config.name.contains('UnitTest')) {
                config.resolutionStrategy.eachDependency { details ->
                    if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                        details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
                    }
                }
            }
        }
    }
    productFlavors {
        pt_360 {}
        yingyongbao {}
        baidu {}
        xiaomi {}
        huawei {}
        oppo {}
        vivo {}
        leshi {}
        meizu {}
        sougou {}
        lianxiang {}
        ali {}
        jinli {}
        qita {}
    }

    productFlavors.all {
            //正式
        flavor ->
            flavor.manifestPlaceholders = [package_name    : DEF_APPLICATION_ID,
                                           APP_ICON        : project.hasProperty("cusAppIcon") ? cusAppIcon : DEF_APP_ICON,
                                           TD_CHANNEL_VALUE: name,
                                           TD_APP_VALUE    : "3E46A3A0BDE8407E99B7AF49071BCD7B",
                                           TC_SDKAPPID     : 1400048455,
                                           TC_ACCOUNT_TYPE : 12012,
                                           URL             : "",
                                           INVITE_CASH     : "",
                                           XG_V2_ACCESS_ID : 2100275299,
                                           XG_V2_ACCESS_KEY: "AJI226WC26AW"]

            //测试
//        flavor ->
//            flavor.manifestPlaceholders = [package_name    : DEF_APPLICATION_ID,
//                                           APP_ICON        : project.hasProperty("cusAppIcon") ? cusAppIcon : DEF_APP_ICON,
//                                           TD_CHANNEL_VALUE: name,
//                                           TD_APP_VALUE    : "09FA3F8880BB497C9E62A54E995E5431",
//                                           TC_SDKAPPID     : 1400048449,
//                                           TC_ACCOUNT_TYPE : 12012,
//                                           URL             : "http://test.91xunai.com:9027",
//                                           INVITE_CASH     : "http://static.fallchat.com/dinner_ceshi/share.html",
//                                           XG_V2_ACCESS_ID : 2100270430,
//                                           XG_V2_ACCESS_KEY: "A78A5XPPB83V"]//在GetBuilder_2中要记得修改port的值

    }


    buildTypes {
        debug {
            //Zipalign优化
            zipAlignEnabled true
            //移除无用的resource文件
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            //Zipalign优化
            zipAlignEnabled true
            //移除无用的resource文件
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //为了兼容Android旧版本的httpClient
    useLibrary 'org.apache.http.legacy'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support:appcompat-v7:27.0.2'

    //IM
    implementation project(':im_module')
    implementation project(':base_module')
}
